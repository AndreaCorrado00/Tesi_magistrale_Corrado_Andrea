function show_filter_pipeline(noise_type)
%load("D:\Desktop\ANDREA\Universita\Magistrale\Anno Accademico 2023-2024\TESI\Tesi_magistrale\Data\Other\ecg_spectrum_analysis_pipeline_test.mat")
switch type
    case "gaussian_stationary"
       
        ecg = ecg_simulation.high_freq;
        Fs = 1000; % Hz
        step = 1000; % Increment of points from which to evaluate the spectrum
        noise=extract_noise("high_frequency_ecg",Fs,ecg);

    case "baseline_drift"
        
        ecg = ecg_simulation.low_freq;
        Fs = 1000; % Hz
        step = 1000; % Increment of points from which to evaluate the spectrum
        noise=extract_noise("Low_frequency_ecg",Fs,ecg);
end

%% Starting of simulation
x_original = ecg - mean(ecg); % Subtract the mean
N_original = length(x_original);
disp( ' ')

n_subs = round(N_original / step);
n_cols = ceil(sqrt(n_subs)); 
n_rows = ceil(n_subs / n_cols); 



% for each ECG (nÂ° beats) length the proposed pipeline is evaluated
for i =  1:n_subs % step:step:N_original

    x = x_original(1:i)-mean(x_original(1:i));
    N = length(x);
    Ts = 1 / Fs;
    t = 0:Ts:Ts*N-Ts;


    x_w=handable_denoise_ecg_wavelet(x,Fs,'sym4',9,false,60);
    x_bp=handable_denoise_ecg_BP(x,Fs,60);



    

end

